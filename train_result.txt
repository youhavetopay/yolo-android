Microsoft Windows [Version 10.0.19042.867]
(c) 2020 Microsoft Corporation. All rights reserved.

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_1000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_1000.weights...
 seen 64, trained: 64 K-images (1 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 742, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 9.67%         (TP = 0, FP = 0)
class_id = 1, name = Soybean Paste Stew, ap = 17.65%     (TP = 0, FP = 0)
class_id = 2, name = Kimchi steww, ap = 15.48%           (TP = 0, FP = 0)

 for conf_thresh = 0.25, precision = -nan(ind), recall = 0.00, F1-score = -nan(ind)
 for conf_thresh = 0.25, TP = 0, FP = 0, FN = 192, average IoU = 0.00 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.142699, or 14.27 %
Total Detection Time: 6 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_2000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_2000.weights...
 seen 64, trained: 128 K-images (2 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 951, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 30.85%        (TP = 0, FP = 0)
class_id = 1, name = Soybean Paste Stew, ap = 38.22%     (TP = 1, FP = 0)
class_id = 2, name = Kimchi steww, ap = 30.94%           (TP = 0, FP = 0)

 for conf_thresh = 0.25, precision = 1.00, recall = 0.01, F1-score = 0.01
 for conf_thresh = 0.25, TP = 1, FP = 0, FN = 191, average IoU = 63.48 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.333362, or 33.34 %
Total Detection Time: 4 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_3000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_3000.weights...
 seen 64, trained: 192 K-images (3 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 779, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 66.51%        (TP = 30, FP = 6)
class_id = 1, name = Soybean Paste Stew, ap = 47.42%     (TP = 14, FP = 11)
class_id = 2, name = Kimchi steww, ap = 43.99%           (TP = 15, FP = 17)

 for conf_thresh = 0.25, precision = 0.63, recall = 0.31, F1-score = 0.41
 for conf_thresh = 0.25, TP = 59, FP = 34, FN = 133, average IoU = 46.89 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.526413, or 52.64 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_3000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_3000.weights...
 seen 64, trained: 192 K-images (3 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 779, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 66.51%        (TP = 30, FP = 6)
class_id = 1, name = Soybean Paste Stew, ap = 47.42%     (TP = 14, FP = 11)
class_id = 2, name = Kimchi steww, ap = 43.99%           (TP = 15, FP = 17)

 for conf_thresh = 0.25, precision = 0.63, recall = 0.31, F1-score = 0.41
 for conf_thresh = 0.25, TP = 59, FP = 34, FN = 133, average IoU = 46.89 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.526413, or 52.64 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_4000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_4000.weights...
 seen 64, trained: 256 K-images (4 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 1169, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 76.47%        (TP = 42, FP = 13)
class_id = 1, name = Soybean Paste Stew, ap = 51.71%     (TP = 37, FP = 39)
class_id = 2, name = Kimchi steww, ap = 54.40%           (TP = 33, FP = 32)

 for conf_thresh = 0.25, precision = 0.57, recall = 0.58, F1-score = 0.58
 for conf_thresh = 0.25, TP = 112, FP = 84, FN = 80, average IoU = 42.84 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.608598, or 60.86 %
Total Detection Time: 4 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_5000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_5000.weights...
 seen 64, trained: 320 K-images (5 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 925, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 76.96%        (TP = 32, FP = 1)
class_id = 1, name = Soybean Paste Stew, ap = 54.25%     (TP = 33, FP = 31)
class_id = 2, name = Kimchi steww, ap = 53.24%           (TP = 25, FP = 30)

 for conf_thresh = 0.25, precision = 0.59, recall = 0.47, F1-score = 0.52
 for conf_thresh = 0.25, TP = 90, FP = 62, FN = 102, average IoU = 46.54 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.614819, or 61.48 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_6000.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_6000.weights...
 seen 64, trained: 384 K-images (6 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 924, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 80.20%        (TP = 39, FP = 3)
class_id = 1, name = Soybean Paste Stew, ap = 54.18%     (TP = 36, FP = 33)
class_id = 2, name = Kimchi steww, ap = 55.14%           (TP = 33, FP = 31)

 for conf_thresh = 0.25, precision = 0.62, recall = 0.56, F1-score = 0.59
 for conf_thresh = 0.25, TP = 108, FP = 67, FN = 84, average IoU = 48.07 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.631766, or 63.18 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_final.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_final.weights...
 seen 64, trained: 396 K-images (6 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 784, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 74.67%        (TP = 29, FP = 2)
class_id = 1, name = Soybean Paste Stew, ap = 51.12%     (TP = 25, FP = 20)
class_id = 2, name = Kimchi steww, ap = 53.50%           (TP = 17, FP = 21)

 for conf_thresh = 0.25, precision = 0.62, recall = 0.37, F1-score = 0.46
 for conf_thresh = 0.25, TP = 71, FP = 43, FN = 121, average IoU = 49.51 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.597625, or 59.76 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>darknet.exe detector map train_data/myObjData.data train_data/yolov3-tiny.cfg train_data/weights/train_yolov3-tiny_last.weights
 CUDA-version: 11020 (11020), cuDNN: 8.0.5, CUDNN_HALF=1, GPU count: 1
 CUDNN_HALF=1
 OpenCV version: 3.2.0
 0 : compute_capability = 500, cudnn_half = 0, GPU: GeForce GTX 950M
net.optimized_memory = 0
mini_batch = 1, batch = 1, time_steps = 1, train = 0
   layer   filters  size/strd(dil)      input                output
   0 conv     24       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  24 0.224 BF
   1 max                2x 2/ 2    416 x 416 x  24 ->  208 x 208 x  24 0.004 BF
   2 conv     24       3 x 3/ 1    208 x 208 x  24 ->  208 x 208 x  24 0.449 BF
   3 max                2x 2/ 2    208 x 208 x  24 ->  104 x 104 x  24 0.001 BF
   4 conv     24       3 x 3/ 1    104 x 104 x  24 ->  104 x 104 x  24 0.112 BF
   5 max                2x 2/ 2    104 x 104 x  24 ->   52 x  52 x  24 0.000 BF
   6 conv     24       3 x 3/ 1     52 x  52 x  24 ->   52 x  52 x  24 0.028 BF
   7 max                2x 2/ 2     52 x  52 x  24 ->   26 x  26 x  24 0.000 BF
   8 conv     24       3 x 3/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.007 BF
   9 max                2x 2/ 2     26 x  26 x  24 ->   13 x  13 x  24 0.000 BF
  10 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  11 max                2x 2/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  12 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  13 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  14 conv     24       3 x 3/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.002 BF
  15 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13                                     ->   13 x  13 x  24
  18 conv     24       1 x 1/ 1     13 x  13 x  24 ->   13 x  13 x  24 0.000 BF
  19 upsample                 2x    13 x  13 x  24 ->   26 x  26 x  24
  20 route  19 8                                   ->   26 x  26 x  48
  21 conv     24       3 x 3/ 1     26 x  26 x  48 ->   26 x  26 x  24 0.014 BF
  22 conv     24       1 x 1/ 1     26 x  26 x  24 ->   26 x  26 x  24 0.001 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 0.846
avg_outputs = 293722
 Allocate additional workspace_size = 0.00 MB
Loading weights from train_data/weights/train_yolov3-tiny_last.weights...
 seen 64, trained: 396 K-images (6 Kilo-batches_64)
Done! Loaded 24 layers from weights-file

 calculation mAP (mean average precision)...
 Detection layer: 16 - type = 28
 Detection layer: 23 - type = 28
180
 detections_count = 784, unique_truth_count = 192
class_id = 0, name = Bulgogi, ap = 74.67%        (TP = 29, FP = 2)
class_id = 1, name = Soybean Paste Stew, ap = 51.12%     (TP = 25, FP = 20)
class_id = 2, name = Kimchi steww, ap = 53.50%           (TP = 17, FP = 21)

 for conf_thresh = 0.25, precision = 0.62, recall = 0.37, F1-score = 0.46
 for conf_thresh = 0.25, TP = 71, FP = 43, FN = 121, average IoU = 49.51 %

 IoU threshold = 50 %, used Area-Under-Curve for each unique Recall
 mean average precision (mAP@0.50) = 0.597625, or 59.76 %
Total Detection Time: 5 Seconds

Set -points flag:
 `-points 101` for MS COCO
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data)
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset

D:\topDeskTop\DeskTop\zolzac\darknet\darknet-master\build\darknet\x64>